---

#=================== Ubuntu Servers ======================
- hosts: Ubuntu_servers
  become: true
  tasks:

#  - name: Changing the firewall config file
#    tags: ubuntu
#    replace: 
#        path: /etc/default/ufw
#        regexp: \(=no\)
#       replace: =no

  - name: Run the command in shell and forward the output to the file
    tags: ubuntu
    shell: sudo ufw status > /home/amit/ufw_status_output

  - name: Set the firewall rules in Ubuntu Servers
    tags: ubuntu
    shell: ufw enable
           ufw allow openssh
           ufw allow 4444
           ufw allow 2222
           ufw reload

  
  # - name: Enable the firewall
  #   tags: ubuntu
  #   ufw:
  #       state: enabled
  #       logging: 'on'
  # - name: allow ssh 
  #   ufw: 
  #       rule: allow
  #       name: openssh
  # - name: block dns 
  #   ufw:    
  #       rule: deny
  #       port: '53'
  # - name: allow 4444
  #   ufw:
  #       rule: allow
  #       port: '4444'
  # - name: deny 2222
  #   ufw:
  #       rule: deny
  #       port: '2222'
  # - name: restart the firewall
  #   ufw:
  #      state: reloaded
  

  - name: update the ubuntu repos and install packages
    tags: ubuntu
    package: 
        name:
# "*" ==> Upgrades all the packages
#            - "*"
#            - htop
            - stress-ng 
        state: latest
#        update_cache: yes


#==================== Linux Lite =======================
- hosts: Linux_lite_server
  vars:
       ansible_python_interpreter: /usr/bin/python
       ansible_connection: ssh
       scp_if_ssh: true
  become: true
  tasks:

  - name: update the linux lite repos and install packages
    tags: lite
    package:
        name:
# "*" ==> Upgrades all the packages
#            - "*"
            - htop
            - stress-ng
            - traceroute
        state: latest
        update_cache: yes


#=================== Pop server ========================
- hosts: Pop_server
#  vars:
#       ansible_python_interpreter: /usr/bin/python
  become: true
  tasks:

  - name: update the pop repos and install packages
    tags: pop 
    package:
        name:
#            - "*"
            - htop
            - stress-ng
        state: latest
        update_cache: yes


#=================== CentOS Server ========================
- hosts: CentOS_servers
  vars:
       ansible_python_interpreter: /usr/bin/python
  become: true
  become_method: su
  become_user: root
  tasks:

  - name: update the centos repos and install packages
    tags: centos
    package:
        name:
#            - "*" 
            # - epel-release
            # - htop
            # - httpd
            # - stress-ng 
        state: latest
        update_cache: yes


